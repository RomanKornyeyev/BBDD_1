REM **** EJER 1 ****
REM ==== PROCEDIMIENTO =====
SET SERVEROUTPUT ON;
SET VERIFY OFF;
CREATE OR REPLACE PROCEDURE LONGITUD(RADIO NUMBER)
IS
	V_PI NUMBER;
	V_RESULTADO NUMBER;
BEGIN
	V_PI := 3.14;
	V_RESULTADO := ((V_PI*2)*RADIO)/100;
	DBMS_OUTPUT.PUT_LINE(V_RESULTADO);
END;
/

EXECUTE LONGITUD(20);

REM ========================

REM ==== BLOQUE ANÓNIMO =====
SET SERVEROUTPUT ON;
SET VERIFY OFF;
DECLARE
	V_RADIO NUMBER;
	V_PI NUMBER;
	V_RESULTADO NUMBER;
BEGIN
	V_RADIO := &V_RADIO_TECLADO;
	V_PI := 3.14;
	V_RESULTADO := ((V_PI*2)*V_RADIO)/100;
	DBMS_OUTPUT.PUT_LINE(V_RESULTADO);
END;
/


REM ==============================================================================

REM **** EJER 2 ****

REM ==== PROCEDIMIENTO ====
SET SERVEROUTPUT ON;
SET VERIFY OFF;
CREATE OR REPLACE PROCEDURE EMPLEADITO(NUM_EMPLE NUMBER)
IS
	V_SAL EMPLE.SALARIO%TYPE;
BEGIN
	SELECT SALARIO INTO V_SAL FROM EMPLE WHERE EMP_NO=NUM_EMPLE;
	DBMS_OUTPUT.PUT_LINE(V_SAL);
END;
/

EXECUTE EMPLEADITO(7839);


REM ==============================================================================

REM **** EJER 3 ****

REM ==== PROCEDIMIENTO ====
SET SERVEROUTPUT ON;
SET VERIFY OFF;
CREATE OR REPLACE PROCEDURE NOMBRE_ASIGNATURA(CODE NUMBER)
IS
	V_NOMBRE ASIGNATURAS.NOMBRE%TYPE;
BEGIN
	SELECT NOMBRE INTO V_NOMBRE FROM ASIGNATURAS WHERE COD=CODE;
	DBMS_OUTPUT.PUT_LINE(V_NOMBRE);
END;
/

EXECUTE NOMBRE_ASIGNATURA(7);

REM ==============================================================================

REM **** EJER 4 ****

REM ==== PROCEDIMIENTO ====
SET SERVEROUTPUT ON;
SET VERIFY OFF;
CREATE OR REPLACE PROCEDURE NOM_PROFE(V_DNI NUMBER)
IS
	V_NOMBRE PROFESORES.APELLIDOS%TYPE;
BEGIN
	SELECT APELLIDOS INTO V_NOMBRE FROM PROFESORES WHERE DNI=V_DNI;
	DBMS_OUTPUT.PUT_LINE(V_NOMBRE);
END;
/

EXECUTE NOM_PROFE(9800990);

REM ==============================================================================

REM **** EJER 5 ****

REM ==== PROCEDIMIENTO ====
SET SERVEROUTPUT ON;
SET VERIFY OFF;
CREATE OR REPLACE PROCEDURE VISUALIZAR_VENTAS(V_NOMBRE DEPART.DNOMBRE%TYPE)
IS
	V_DEPT_NO DEPART.DEPT_NO%TYPE;
	V_LOC DEPART.LOC%TYPE;
BEGIN
	SELECT DEPT_NO, LOC INTO V_DEPT_NO, V_LOC FROM DEPART WHERE DNOMBRE=V_NOMBRE;
	DBMS_OUTPUT.PUT_LINE('EL DEPARTAMENTO Nº '|| V_DEPT_NO ||' ESTÁ EN: '||V_LOC);
END;
/

EXECUTE VISUALIZAR_VENTAS('VENTAS');

REM ==============================================================================

REM **** EJER 6 ****

REM ==== PROCEDIMIENTO ====
SET SERVEROUTPUT ON;
SET VERIFY OFF;
CREATE OR REPLACE PROCEDURE EMPLE_NUEVO(V_APELLIDO EMPLE.APELLIDO%TYPE,
V_OFICIO EMPLE.APELLIDO%TYPE,
V_DEPT_NO EMPLE.DEPT_NO%TYPE)
IS
	V_EMP_NO NUMBER DEFAULT 9999;
BEGIN
	INSERT INTO EMPLE VALUES(V_EMP_NO, V_APELLIDO, V_OFICIO, NULL, NULL, NULL, NULL, V_DEPT_NO);
END;
/

EXECUTE EMPLE_NUEVO('PEREZ','ANALISTA',10);


REM ==============================================================================

REM **** EJER 7 ****

REM ==== CON BLOQUE ANÓNIMO ====
SET SERVEROUTPUT ON;
SET VERIFY OFF;
DECLARE
	V_OFIFICIO EMPLE.OFICIO%TYPE;
BEGIN
	UPDATE EMPLE SET SALARIO=SALARIO+200 WHERE OFICIO='ANALISTA';
END;
/



REM ==============================================================================

REM **** EJER 8 ****

REM ==== BLOQUE ANÓNIMO ====
SET SERVEROUTPUT ON;
SET VERIFY OFF;
DECLARE
BEGIN
	DELETE FROM EMPLE WHERE OFICIO=&IN_OFICIO;
END;
/


REM ==============================================================================

REM **** EJER 9 ****

REM ==== CON BLOQUE ====
SET SERVEROUTPUT ON;
SET VERIFY OFF;
DECLARE
BEGIN
	DELETE FROM ASIGNATURAS WHERE COD>5;
	DBMS_OUTPUT.PUT_LINE('NÚMERO DE EMPLEADOS BORRADOS: '||TO_CHAR(SQL%ROWCOUNT));
END;
/


REM ==============================================================================

REM **** EJER 10 ****

REM ==== CON PROCEDIMIENTO ====
SET SERVEROUTPUT ON;
SET VERIFY OFF;
CREATE OR REPLACE PROCEDURE SUBIR_SALARIO(V_EMP_NO EMPLE.EMP_NO%TYPE)
IS
	AUX NUMBER;
BEGIN
	SELECT SALARIO INTO AUX FROM EMPLE WHERE EMP_NO=V_EMP_NO;
	IF AUX>1200 THEN
		UPDATE EMPLE SET SALARIO=SALARIO+(SALARIO*0.20) WHERE EMP_NO=V_EMP_NO;
	ELSE
		UPDATE EMPLE SET SALARIO=SALARIO+(SALARIO*0.25) WHERE EMP_NO=V_EMP_NO;
	END IF;
	DBMS_OUTPUT.PUT_LINE('CODIGO: '||V_EMP_NO||' SALARIO: '|| AUX);
END;
/

EXECUTE SUBIR_SALARIO(7900);

REM ==============================================================================

REM **** EJER 11 ****

REM ==== CON PROCEDIMIENTO ====
SET SERVEROUTPUT ON;
SET VERIFY OFF;
CREATE OR REPLACE PROCEDURE FUTBOLISTA(V_NUM NUMBER)
IS
	POSICION VARCHAR(30);
BEGIN
	CASE
	WHEN V_NUM=1 THEN POSICION:='PORTERO';
	WHEN V_NUM>=2 AND V_NUM<=5 THEN POSICION:='DEFENSAS';
	WHEN V_NUM>=6 AND V_NUM<=9 THEN POSICION:='CENTRO';
	WHEN V_NUM=10 OR V_NUM=11 THEN POSICION:='DELANTEROS';
	ELSE POSICION:='ERROR';
	END CASE;
	DBMS_OUTPUT.PUT_LINE(POSICION);
END;
/

EXECUTE FUTBOLISTA(50);


REM ======ESTO ES UNA SIMPLIFICACIÓN
REM === 1 - PORTERO
REM === 2,3,4,5 - DEFENSAS
REM === 6,7,8,9 - CENTRO
REM === 10,11 - DELANTEROS


REM ==============================================================================

REM **** EJER 12 ****

REM ==== CON PROCEDIMIENTO ====
SET SERVEROUTPUT ON;
SET VERIFY OFF;
CREATE OR REPLACE PROCEDURE MAYOR_PROC(NUM1 NUMBER, NUM2 NUMBER)
IS
	V_MAYOR NUMBER;
BEGIN
	CASE
	WHEN NUM1>NUM2 THEN V_MAYOR:=NUM1;
	WHEN NUM2>NUM1 THEN V_MAYOR:=NUM2;
	ELSE DBMS_OUTPUT.PUT_LINE('LOS DOS NÚMEROS SON IGUALES');
	END CASE;
	DBMS_OUTPUT.PUT_LINE(V_MAYOR);
END;
/

EXECUTE MAYOR_PROC(20, 30);



REM ==============================================================================

REM **** EJER 13 **** IMP<<<<<<<<<<<<<<<<<<<

REM ==== CON PROCEDIMIENTO ====
SET SERVEROUTPUT ON;
SET VERIFY OFF;
CREATE OR REPLACE PROCEDURE CONTAR_DIG(NUM NUMBER)
IS
	AUX VARCHAR(50);
	CONT NUMBER DEFAULT 0;
BEGIN
	SELECT TO_CHAR(NUM) INTO AUX FROM DUAL;
	FOR I IN 1..LENGTH(AUX) LOOP
		CONT:=CONT+1;
	END LOOP;
	DBMS_OUTPUT.PUT_LINE(CONT);
END;
/

EXECUTE CONTAR_DIG(50);


REM ==============================================================================

REM **** EJER AUX **** IMP<<<<<<<<<<<<<<<<<<<<<<<<
REM *INTRODUCIR UN STRING Y DEVOLVERLA AL REVÉS*

REM ==== CON PROCEDIMIENTO ====
SET SERVEROUTPUT ON;
SET VERIFY OFF;
CREATE OR REPLACE PROCEDURE REVERTIR(PALABRA VARCHAR)
IS
	AUX VARCHAR(50);
BEGIN
	FOR I IN REVERSE 1..LENGTH(PALABRA) LOOP
		AUX:=AUX||SUBSTR(PALABRA, I, 1);
	END LOOP;
	DBMS_OUTPUT.PUT_LINE(AUX);
END;
/

EXECUTE REVERTIR('HOLA');


REM ==== CON BLOQUE ANÓNIMO ====
REM === HAY QUE INTRODUCIR LA PALABRA CON LAS COMILLAS
SET SERVEROUTPUT ON;
SET VERIFY OFF;
DECLARE
	PALABRA VARCHAR(10);
	AUX VARCHAR(10);
BEGIN
	PALABRA:=&INTRODUCIR;
	FOR I IN REVERSE 1..LENGTH(PALABRA) LOOP
		AUX:=AUX||SUBSTR(PALABRA, I, 1);
	END LOOP;
	DBMS_OUTPUT.PUT_LINE(AUX);
END;
/

REM ==============================================================================
REM === SIEMPRE HAY QUE PONER FROM ALGO
REM === SELECT NUM + 1 INTO V_AUX FROM DUAL; 

SET SERVEROUTPUT ON;
SET VERIFY OFF;
REM **** EJER 14 ****
CREATE OR REPLACE PROCEDURE REPE (NUM NUMBER)
IS
	V_AUX NUMBER;
BEGIN
	V_AUX:=(NUM+1);
	FOR I IN 0..NUM LOOP
		V_AUX:=V_AUX - 1;
		DBMS_OUTPUT.PUT_LINE(V_AUX);
	END LOOP;
END;
/

EXECUTE REPE(20);

REM ==============================================================================

REM **** EJER 15 ****
SET SERVEROUTPUT ON;
SET VERIFY OFF;
CREATE OR REPLACE PROCEDURE BISIESTO(ANNIO NUMBER)
IS

BEGIN 
	IF ((ANNIO MOD 4=0 AND ANNIO MOD 100 != 0) OR ANNIO MOD 400 =0) THEN 
		DBMS_OUTPUT.PUT_LINE('ES BISIESTO');
	ELSE 
		DBMS_OUTPUT.PUT_LINE('NO ES BISIESTO');
	END IF;
END;
/

EXECUTE BISIESTO(100);