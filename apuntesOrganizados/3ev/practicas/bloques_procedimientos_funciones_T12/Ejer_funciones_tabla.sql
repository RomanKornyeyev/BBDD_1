REM === EJER 1 ===

SET SERVEROUTPUT ON;
SET VERIFY OFF;
CREATE OR REPLACE FUNCTION INCREMENTAR(NUM LIBROS.PRECIO%TYPE)
RETURN LIBROS.PRECIO%TYPE
IS
	AUX NUMBER;
BEGIN
	AUX := NUM*0.10+NUM;
	RETURN AUX;
END;
/

BEGIN DBMS_OUTPUT.PUT_LINE(INCREMENTAR(10));
END;
/

SELECT TITULO, PRECIO, INCREMENTAR(PRECIO)"PRECIO_NUEVO" FROM LIBROS;


REM ======== IMPORTANTE: LAS FUNCIONES NO PUEDEN PRINTEAR NADA, LOS PRINT VAN FUERA
REM ======== SIEMPRE TIENE QUE HABER UN RETURN
REM ======== EN EL RETURN SE PONE EL TIPO DE VARIABLE (COMO EN JAVA)







REM === EJER 1 ===
SET SERVEROUTPUT ON;
SET VERIFY OFF;
CREATE OR REPLACE FUNCTION AUMENTO(NUM1 NUMBER, NUM2 NUMBER)
RETURN NUMBER
AS
	AUX NUMBER;
BEGIN
	AUX := NUM1*(NUM2/100)+NUM1;
	RETURN AUX;
END;
/

SELECT TITULO, PRECIO, AUMENTO(PRECIO, 20)"PREC_NUEVO" FROM LIBROS;
SELECT TITULO, PRECIO, AUMENTO(PRECIO, 40)"PREC_NUEVO" FROM LIBROS;





REM === EJER 3 ===
SET SERVEROUTPUT ON;
SET VERIFY OFF;
CREATE OR REPLACE FUNCTION VALOR(NUM NUMBER)
RETURN VARCHAR
AS
	VALORRETORNADO VARCHAR(50);
BEGIN
	IF(NUM<=20) THEN
		VALORRETORNADO:='ECONÃ“MICO';
	ELSE
		VALORRETORNADO:='COSTOSO';
	END IF;
	RETURN VALORRETORNADO;
END;
/


SELECT TITULO, PRECIO, VALOR(PRECIO) FROM LIBROS;